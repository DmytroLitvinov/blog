<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>DevBlog with love</title><link href="https://blog.DmytroLitvinov.com/" rel="alternate"></link><link href="https://blog.DmytroLitvinov.com/feeds/all.atom.xml" rel="self"></link><id>https://blog.DmytroLitvinov.com/</id><updated>2018-04-02T21:58:00+03:00</updated><entry><title>Useful Django admin improvements</title><link href="https://blog.DmytroLitvinov.com/2018/04/02/useful-django-admin-improvements" rel="alternate"></link><published>2018-04-02T21:58:00+03:00</published><updated>2018-04-02T21:58:00+03:00</updated><author><name>Dmytro Litvinov</name></author><id>tag:blog.dmytrolitvinov.com,2018-04-02:/2018/04/02/useful-django-admin-improvements</id><summary type="html">&lt;p&gt;A few improvements that will improve your django admin application.&lt;/p&gt;
&lt;h5&gt;Improve security of your Django admin:&lt;/h5&gt;
&lt;p&gt;Add &lt;a href="https://github.com/dmpayton/django-admin-honeypot"&gt;Django Admin Honeypot&lt;/a&gt;.
It is a fake Django admin login screen to log and notify admins of attempted unauthorized access.
Also I recommend you to change your &lt;em&gt;real&lt;/em&gt; admin url to URL with …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A few improvements that will improve your django admin application.&lt;/p&gt;
&lt;h5&gt;Improve security of your Django admin:&lt;/h5&gt;
&lt;p&gt;Add &lt;a href="https://github.com/dmpayton/django-admin-honeypot"&gt;Django Admin Honeypot&lt;/a&gt;.
It is a fake Django admin login screen to log and notify admins of attempted unauthorized access.
Also I recommend you to change your &lt;em&gt;real&lt;/em&gt; admin url to URL with 20+ random string.
You can generate this random string from terminal with python just in one line:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ascii_letters&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;digits&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Django-admin-honeypot pulls the users IP address from the REMOTE_ADDR request header.
Don't forget to create MIDDLEWARE.
Example of MIDDLEWARE:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;RemoteAddrMiddleware&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;get_response&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;  &lt;span class="c1"&gt;# noqa&lt;/span&gt;
    &lt;span class="c1"&gt;# One-time configuration and initialization.&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;middleware&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# Code to be executed for each request before&lt;/span&gt;
        &lt;span class="c1"&gt;# the view (and later middleware) are called.&lt;/span&gt;

        &lt;span class="n"&gt;x_forwarded_for&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;META&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;HTTP_X_FORWARDED_FOR&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x_forwarded_for&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x_forwarded_for&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;META&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;REMOTE_ADDR&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;META&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;REMOTE_ADDR&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ip&lt;/span&gt;

        &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# Code to be executed for each request/response after&lt;/span&gt;
        &lt;span class="c1"&gt;# the view is called.&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;middleware&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;Visually distinguish environments in Django Admin&lt;/h5&gt;
&lt;p&gt;For this option you can use &lt;a href="https://github.com/dizballanze/django-admin-env-notice"&gt;django-admin-env-notice&lt;/a&gt;.
The code is pretty simple and you can implement with own files without 3th party app.
Really cool, right? :)&lt;/p&gt;
&lt;h5&gt;Order your models and apps.&lt;/h5&gt;
&lt;p&gt;As soon as your application grows, the more you want to put it in order.
For this case I recommend to use &lt;a href="https://github.com/mishbahr/django-modeladmin-reorder"&gt;django-modeladmin-order&lt;/a&gt;.
Now you can order as you wish your django apps. Also it has other interesting features. More detail you can find at link
above. If you use other apps, you can leave a comment under this post.&lt;/p&gt;
&lt;h5&gt;Get all your project models on one single page with charts and whistles.&lt;/h5&gt;
&lt;p&gt;We work with Agile methodologies. Very often every project has custom User model.
For this case I recommend you to use &lt;a href="https://github.com/byashimov/django-controlcenter"&gt;django-controlcenter&lt;/a&gt;
The first pretty useful chart we use for SaaS projects is BarChart with user registrations.
Every Monday we can take a look for the registrations of our project. Very useful and easy to implement.
This library has a great documentation.&lt;/p&gt;
&lt;h5&gt;Add &lt;code&gt;raw_id_fields&lt;/code&gt; for fields with ForeignKey.&lt;/h5&gt;
&lt;p&gt;By default, Django’s admin uses a select-box interface (&amp;lt;select&gt;) for fields that are ForeignKey.
Sometimes you don’t want to incur the overhead of having to select all the related instances to display in the drop-down.
It will increase time while your DB will execute query to get them all.
More detail at &lt;a href="https://docs.djangoproject.com/en/2.0/ref/contrib/admin/#django.contrib.admin.ModelAdmin.raw_id_fields"&gt;Django docs&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;All these simple things will help to increase developer productivity and make your life more easier at your project.
Do you have other useful advice? I'm ready to listen!)&lt;/p&gt;</content><category term="django"></category><category term="python"></category></entry><entry><title>How to move a model between two Django apps</title><link href="https://blog.DmytroLitvinov.com/2018/03/12/how-to-move-a-model-between-two-django-apps" rel="alternate"></link><published>2018-03-12T20:30:00+02:00</published><updated>2018-03-12T20:30:00+02:00</updated><author><name>Dmytro Litvinov</name></author><id>tag:blog.dmytrolitvinov.com,2018-03-12:/2018/03/12/how-to-move-a-model-between-two-django-apps</id><summary type="html">&lt;p&gt;Let's imagine that you have 2 django apps: &lt;code&gt;article&lt;/code&gt; and &lt;code&gt;blog&lt;/code&gt;. 
So first one has model &lt;code&gt;Article&lt;/code&gt; as you already guessed.
So we need to move our &lt;code&gt;Article&lt;/code&gt; model from &lt;code&gt;article&lt;/code&gt; app to &lt;code&gt;blog&lt;/code&gt; app.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Copy your code of &lt;code&gt;Article&lt;/code&gt; model from &lt;code&gt;article&lt;/code&gt; app to &lt;code&gt;blog&lt;/code&gt; app into &lt;code&gt;models.py …&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Let's imagine that you have 2 django apps: &lt;code&gt;article&lt;/code&gt; and &lt;code&gt;blog&lt;/code&gt;. 
So first one has model &lt;code&gt;Article&lt;/code&gt; as you already guessed.
So we need to move our &lt;code&gt;Article&lt;/code&gt; model from &lt;code&gt;article&lt;/code&gt; app to &lt;code&gt;blog&lt;/code&gt; app.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Copy your code of &lt;code&gt;Article&lt;/code&gt; model from &lt;code&gt;article&lt;/code&gt; app to &lt;code&gt;blog&lt;/code&gt; app into &lt;code&gt;models.py&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;We need to specify database table for our moved model. At our example it is &lt;code&gt;article_article&lt;/code&gt;. 
You need to add to your &lt;code&gt;blog.Article&lt;/code&gt; model next lines:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;db_table&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;article_article&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Now you can &lt;code&gt;python manage.py makemigrations blog&lt;/code&gt; for getting django migration for creating model or you could get
creation migration from your &lt;code&gt;article&lt;/code&gt; app and place it to migrated migration in &lt;code&gt;blog&lt;/code&gt; app. If you run above command,
you need to delete this migration after place it into previously migrated migration.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now you need to change all references in your whole project to new new reference of your model.
It can be ForeignKey, import etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Verify that you do all correctly with command: &lt;code&gt;./manage.py migrate&lt;/code&gt;. Nothing should be migrated.
If not - verify previous steps, because we just changed place of your model code, not database table name.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Last step will be remove &lt;code&gt;db_table&lt;/code&gt; field from &lt;code&gt;class Meta&lt;/code&gt; and run next command:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;./manage.py makemigrations blog
./manage.py migrate blog
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After create migration you could see something next operation at migration:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;operations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="n"&gt;migrations&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AlterModelTable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;blog&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;table=None&lt;/code&gt; means it will take the default table-name, which in this case will be &lt;code&gt;blog_article&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This solution was tested with Django 1.11 and Postgres database with ForeignKey relation.&lt;/p&gt;
&lt;p&gt;Hope it helps.&lt;/p&gt;</content><category term="django"></category><category term="learning"></category></entry><entry><title>Create static blog</title><link href="https://blog.DmytroLitvinov.com/2018/02/03/create-static-blog" rel="alternate"></link><published>2018-02-03T17:03:00+02:00</published><updated>2018-02-03T17:03:00+02:00</updated><author><name>Dmytro Litvinov</name></author><id>tag:blog.dmytrolitvinov.com,2018-02-03:/2018/02/03/create-static-blog</id><summary type="html">&lt;p&gt;Each programmer in his life should: learn a git, do a to-do list, and also make a &lt;a href="https://github.com/DmytroLitvinov/blog"&gt;blog&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;If you are python programmer, I recommend you to do your personal blog with help of python.&lt;/p&gt;
&lt;p&gt;My current blog created with help of &lt;a href="http://docs.getpelican.com/en/stable/"&gt;Pelican&lt;/a&gt; using &lt;a href="https://github.com/alexandrevicenzi/Flex"&gt;Flex theme&lt;/a&gt; 
and hosted at GitHub …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Each programmer in his life should: learn a git, do a to-do list, and also make a &lt;a href="https://github.com/DmytroLitvinov/blog"&gt;blog&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;If you are python programmer, I recommend you to do your personal blog with help of python.&lt;/p&gt;
&lt;p&gt;My current blog created with help of &lt;a href="http://docs.getpelican.com/en/stable/"&gt;Pelican&lt;/a&gt; using &lt;a href="https://github.com/alexandrevicenzi/Flex"&gt;Flex theme&lt;/a&gt; 
and hosted at GitHub. &lt;/p&gt;
&lt;p&gt;The main files you should pay attention to are: &lt;a href="https://github.com/DmytroLitvinov/blog/blob/master/pelicanconf.py"&gt;pelicanconf.py&lt;/a&gt; 
and &lt;a href="https://github.com/DmytroLitvinov/blog/blob/master/publishconf.py"&gt;publishconf.py&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Pelican has a great &lt;a href="http://docs.getpelican.com/en/stable/quickstart.html"&gt;quickstart section&lt;/a&gt;, 
after reading that, you will already have generated the main template for your blog.&lt;/p&gt;
&lt;p&gt;I recommend you create repository called 'blog' and push these files to this repo.&lt;/p&gt;
&lt;p&gt;So, add content and your blog is ready. Pretty simple, right?&lt;/p&gt;</content><category term="python"></category></entry><entry><title>Redshift: setup the color temperature of your screen according to your surroundings</title><link href="https://blog.DmytroLitvinov.com/2017/08/20/redshift-setup-the-color-temperature-of-your-screen-according-to-your-surroundings" rel="alternate"></link><published>2017-08-20T09:11:00+03:00</published><updated>2017-08-20T09:11:00+03:00</updated><author><name>Dmytro Litvinov</name></author><id>tag:blog.dmytrolitvinov.com,2017-08-20:/2017/08/20/redshift-setup-the-color-temperature-of-your-screen-according-to-your-surroundings</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;Redshift adjusts the color temperature of your screen according to your surroundings. This may help your eyes hurt less if you are working in front of the screen at night.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is description about software from main site. &lt;/p&gt;
&lt;p&gt;Earlier, I used &lt;a href="https://justgetflux.com/"&gt;f.lux&lt;/a&gt; for Windows and I was happy with …&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;Redshift adjusts the color temperature of your screen according to your surroundings. This may help your eyes hurt less if you are working in front of the screen at night.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is description about software from main site. &lt;/p&gt;
&lt;p&gt;Earlier, I used &lt;a href="https://justgetflux.com/"&gt;f.lux&lt;/a&gt; for Windows and I was happy with this program, but when I switched to Linux, I found out that after a month the f.lux stopped working. After I found out that there might be a problem due to my video card nVidia on Ubuntu OS (&lt;a href="https://www.youtube.com/watch?v=_36yNWw_07g"&gt;hello from Linus&lt;/a&gt;), I immediately decided to find another program and that was &lt;a href="http://jonls.dk/redshift/"&gt;Redshift&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;h3&gt;1. Install program&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;sudo apt-get install redshift redshift-gtk&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;2. Setup config file&lt;/h3&gt;
&lt;p&gt;Create next file &lt;code&gt;~/.config/redshift.conf&lt;/code&gt; at your $HOME directory.
Example of &lt;code&gt;redshift.conf&lt;/code&gt; file you can look &lt;a href="https://github.com/jonls/redshift/blob/master/redshift.conf.sample"&gt;here&lt;/a&gt;.
If you need to find quickly your location, use &lt;a href="https://justgetflux.com/map.html"&gt;f.lux: Where am I?&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;3. Starting Redshift automatically&lt;/h3&gt;
&lt;p&gt;You dont need add at startup applications command lines, just type once in your terminal &lt;code&gt;redshift-gtk&lt;/code&gt; and at tray icon click to "Autostart", close programm that you started, and then you can reboot to see results.&lt;/p&gt;</content><category term="redshift"></category><category term="programm"></category></entry><entry><title>Django Queryset: select and prefetch related.</title><link href="https://blog.DmytroLitvinov.com/2017/08/19/django-queryset-select-and-prefetch-related" rel="alternate"></link><published>2017-08-19T13:54:00+03:00</published><updated>2017-08-19T13:54:00+03:00</updated><author><name>Dmytro Litvinov</name></author><id>tag:blog.dmytrolitvinov.com,2017-08-19:/2017/08/19/django-queryset-select-and-prefetch-related</id><summary type="html">&lt;p&gt;Some information for understanding Django Queryset  methods: select_related and prefetch_relateds&lt;/p&gt;</summary><content type="html">&lt;p&gt;Today, we will learn more about Django Queryset methods &lt;strong&gt;&lt;em&gt;select_related()&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;prefetch_related&lt;/em&gt;()&lt;/strong&gt;. I decided to write an article after I &lt;a href="https://medium.com/@dmytrolitvinov/idea-for-the-djangotip-post-select-related-and-prefetch-related-with-new-object-prefetch-f1b8163eb5dd"&gt;recommended&lt;/a&gt; to a blogger &lt;a href="https://medium.com/@lucasmagnum"&gt;Lucas Magnum&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;&lt;em&gt;While I wrote this post I see that a slogan of Lucas Magnum's blog is:
(I support this idea with both hands :blush:)&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Learning through sharing. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Before you start, you need to know about &lt;a href="https://medium.com/@hakibenita/things-you-must-know-about-django-admin-as-your-app-gets-bigger-6be0b0ee9614"&gt;&lt;strong&gt;a problem N+1&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you just started programming on Django framework, you need to remember:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;select_related&lt;/em&gt; - forward relationship&lt;/li&gt;
&lt;li&gt;&lt;em&gt;prefetch_related&lt;/em&gt; - reverse relationship&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;List of links to read:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Django docs about &lt;a href="https://docs.djangoproject.com/en/1.11/ref/models/querysets/#select-related"&gt;select_related&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Django docs about &lt;a href="https://docs.djangoproject.com/en/1.11/ref/models/querysets/#prefetch-related"&gt;prefetch_related&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Of course &lt;a href="https://medium.com/@lucasmagnum/djangotip-select-prefetch-related-e76b683aa457"&gt;Lucas Magnum's post&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://kennethjiang.blogspot.com/2016/01/advanced-usage-of-prefetchrelated-and.html"&gt;Advanced usage of prefetch_related&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@hansonkd/performance-problems-in-the-django-orm-1f62b3d04785"&gt;Solving Performance Problems in the Django ORM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="python"></category><category term="django"></category><category term="queryset"></category><category term="select_related"></category><category term="prefetch_related"></category></entry><entry><title>How to learn Django Framework</title><link href="https://blog.DmytroLitvinov.com/2017/03/16/how-to-learn-django-framework" rel="alternate"></link><published>2017-03-16T09:32:00+02:00</published><updated>2017-03-16T09:32:00+02:00</updated><author><name>Dmytro Litvinov</name></author><id>tag:blog.dmytrolitvinov.com,2017-03-16:/2017/03/16/how-to-learn-django-framework</id><summary type="html">&lt;p&gt;Sometimes I read &lt;a href="https://www.reddit.com"&gt;Reddit&lt;/a&gt;, and I see that sometimes &lt;a href="https://www.reddit.com/r/django/"&gt;Django channel&lt;/a&gt; apeear questions about &lt;em&gt;how to learn this framework great framework&lt;/em&gt;.
First of all, it must be said that the documentation of Django is very well documented. And they have no less bad &lt;a href="https://docs.djangoproject.com/en/stable/intro/tutorial01/"&gt;tutorial&lt;/a&gt;. It covers the most beginner questions …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Sometimes I read &lt;a href="https://www.reddit.com"&gt;Reddit&lt;/a&gt;, and I see that sometimes &lt;a href="https://www.reddit.com/r/django/"&gt;Django channel&lt;/a&gt; apeear questions about &lt;em&gt;how to learn this framework great framework&lt;/em&gt;.
First of all, it must be said that the documentation of Django is very well documented. And they have no less bad &lt;a href="https://docs.djangoproject.com/en/stable/intro/tutorial01/"&gt;tutorial&lt;/a&gt;. It covers the most beginner questions that may arise in your development with framework. Of course, if you need to delve deeper into knowledge, then you need to read the documentation, which, as I mentioned above, is well written.&lt;/p&gt;
&lt;h3&gt;List of books and articles that can helps you:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tutorial.djangogirls.org/en/index.html"&gt;DjangoGirls&lt;/a&gt; - dont look at name :) good start for newbies.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.tangowithdjango.com/"&gt;Tango with Django&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en/docs/Learn/Server-side/Django"&gt;Tutorial&lt;/a&gt; from Mozilla&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.twoscoopspress.com/products/two-scoops-of-django-1-8"&gt;Two scoops of Django&lt;/a&gt; - good advices here.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.packtpub.com/web-development/django-example"&gt;Django by example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.vitaliypodoba.com/books/django-for-beginners/"&gt;Django for beginners[UA]&lt;/a&gt; - a good book with support in private forum.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;List of youtube playlists:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qgGIqRFvFFk&amp;amp;list=PL6gx4Cwl9DGBlmzzFcLgDhKTTfNLfX1IK"&gt;Django Tutorials for Beginners&lt;/a&gt; from &lt;a href="https://www.youtube.com/channel/UCJbPGzawDH1njbqV-D5HqKw"&gt;thenewboston&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/CodingEntrepreneurs/playlists"&gt;All of this playlists&lt;/a&gt; from Justin. Hey, Justin, thank you for videos :)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLxxA5z-8B2xk4szCgFmgonNcCboyNneMD"&gt;Playlist from Mike Hibbert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=QgdINlxm-wE&amp;amp;list=PLpTASIMYgCp8supkEmnnrYa5xi9g91ZPI"&gt;Tutorial from Shadrus in Russian&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Learn - it's wonderful! But sometimes it is necessary to move from theory to practice. &lt;/p&gt;</content><category term="python"></category><category term="django"></category><category term="learning"></category></entry><entry><title>Python podcast</title><link href="https://blog.DmytroLitvinov.com/2017/03/13/python-podcast" rel="alternate"></link><published>2017-03-13T18:53:00+02:00</published><updated>2017-03-24T21:49:00+02:00</updated><author><name>Dmytro Litvinov</name></author><id>tag:blog.dmytrolitvinov.com,2017-03-13:/2017/03/13/python-podcast</id><summary type="html">&lt;h3&gt;Learn something new, be in the trend with podcasts.&lt;/h3&gt;
&lt;p&gt;And what do you do when you go to work or from work? It is possible to spend this free time with &lt;strong&gt;advantage&lt;/strong&gt;. Someone listens the audiobooks, and I suggest listening to audio &lt;em&gt;podcasts&lt;/em&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://talkpython.fm/"&gt;Talk Python&lt;/a&gt; - the famous podcast about python …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h3&gt;Learn something new, be in the trend with podcasts.&lt;/h3&gt;
&lt;p&gt;And what do you do when you go to work or from work? It is possible to spend this free time with &lt;strong&gt;advantage&lt;/strong&gt;. Someone listens the audiobooks, and I suggest listening to audio &lt;em&gt;podcasts&lt;/em&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://talkpython.fm/"&gt;Talk Python&lt;/a&gt; - the famous podcast about python here. Just listen it ♫&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.podcastinit.com/"&gt;Podcast__init__&lt;/a&gt; - another updatable podcast.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.kennethreitz.org/import-this/"&gt;Import This&lt;/a&gt; - podcast from Kenneth Reitz. &lt;a href="https://github.com/kennethreitz/requests"&gt;requests&lt;/a&gt; is his library ☺&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Update: I found a great article about &lt;a href="https://dbader.org/blog/ultimate-list-of-python-podcasts"&gt;Python podcast&lt;/a&gt;. Definitely the good article&lt;/p&gt;
&lt;p&gt;Take a walk with a benefit from podcast.&lt;/p&gt;</content><category term="python"></category><category term="podcast"></category></entry><entry><title>Questions for the interview to the position Python developer.</title><link href="https://blog.DmytroLitvinov.com/2017/03/05/questions-for-the-interview-to-the-position-python-developer" rel="alternate"></link><published>2017-03-05T21:22:00+02:00</published><updated>2017-03-05T21:22:00+02:00</updated><author><name>Dmytro Litvinov</name></author><id>tag:blog.dmytrolitvinov.com,2017-03-05:/2017/03/05/questions-for-the-interview-to-the-position-python-developer</id><summary type="html">&lt;p&gt;This article containes a lot of useful links to prepare in interview python developer. Click button "Continue reading" and enjoy :)&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="Inverview" src="https://i.ytimg.com/vi/gGg7qF02vHM/maxresdefault.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Monty Python Silly Job Interview&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Links in English&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.techbeamers.com/python-interview-questions/"&gt;(EN) TOP 20 PYTHON INTERVIEW QUESTIONS FOR IT PROFESSIONALS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/1st/interview"&gt;https://github.com/1st/interview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sigmavirus24/python-interview-questions"&gt;https://github.com/sigmavirus24/python-interview-questions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.toptal.com/python/interview-questions"&gt;https://www.toptal.com/python/interview-questions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codementor.io/sheena/essential-python-interview-questions-du107ozr6"&gt;https://www.codementor.io/sheena/essential-python-interview-questions-du107ozr6&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Links in Russian&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://grishaev.me/interview/"&gt;http://grishaev.me/interview/&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://zxmd.wordpress.com/2010/11/23/python_interview_questions/"&gt;https://zxmd.wordpress.com/2010/11/23/python_interview_questions/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://proadvices.blogspot.com/2014/04/blog-post_8.html"&gt;(RU) The question on the position of a junior developer at Yandex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://proadvices.blogspot.com/2014/04/blog-post_8806.html?view=classic"&gt;(RU) Another interesting topic on Yandex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://proadvices.blogspot.com/2014/04/blog-post_3.html"&gt;(RU) The task of Yandex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://proadvices.blogspot.com/2014/03/blog-post.html"&gt;(RU) Here is a small list. Also from Yandex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pyobject.ru/blog/2010/02/04/python-quiz/"&gt;(RU) Questions from Yury Yurevich&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Have a nice interview!)&lt;/strong&gt;&lt;/p&gt;</content><category term="python"></category><category term="inverview"></category></entry><entry><title>Improve your skill with games</title><link href="https://blog.DmytroLitvinov.com/2017/02/23/improve-your-skill-with-games" rel="alternate"></link><published>2017-02-23T10:45:00+02:00</published><updated>2017-02-23T10:45:00+02:00</updated><author><name>Dmytro Litvinov</name></author><id>tag:blog.dmytrolitvinov.com,2017-02-23:/2017/02/23/improve-your-skill-with-games</id><summary type="html">&lt;p&gt;Here you will find a lot of games to improve your skill in programming with FUN :)&lt;/p&gt;</summary><content type="html">&lt;p&gt;Sometimes you want to play games, but without wasting time doing it. So this article provides links to games, but related to programming.&lt;/p&gt;
&lt;h2&gt;CSS games&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://flukeout.github.io"&gt;CSS diner&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.flexboxdefense.com"&gt;Flexbox Defense&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://flexboxfroggy.com"&gt;Flexbox Foggy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Training sites&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://checkio.org/"&gt;CheckiO&lt;/a&gt; - Python, javascript. Awesome site!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codewars.com/"&gt;Code Wars&lt;/a&gt; - Where I practice. Here u can find other interesting solution.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackerrank.com/"&gt;Hacker Rank&lt;/a&gt; - Practice coding. Compete. Find jobs. &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codingame.com/"&gt;Coding Game&lt;/a&gt; - The game captivated me with its graphics&lt;/li&gt;
&lt;li&gt;&lt;a href="https://katacoda.com/"&gt;KataCoda&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stratusville.com/"&gt;Stratus Ville&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.codeabbey.com/"&gt;Code Abbey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.exercism.io/"&gt;Exercism&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://xss-game.appspot.com/"&gt;XSS game&lt;/a&gt; - Game about XSS made by Google.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codeeval.com/"&gt;Code eval&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.git-game.com/"&gt;Git game&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;</content><category term="games"></category><category term="python"></category><category term="javascript"></category><category term="css"></category></entry></feed>